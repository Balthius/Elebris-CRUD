@page "/CharacterClass/Edit/{classId:int}"
@inject ICharacterClassData classData
@inject ICachedLists cachedList
@inject NavigationManager UriHelper
<h3>Edit</h3>

<CharacterClassForm ButtonText="Update" SelectedClass="@SelectedClass" AttributeStats="@AttributeStats"
                    OnValidSubmit="EditExistingCharacter" />


@code {
    [Parameter] public int classId { get; set; }

    CharacterClassModel SelectedClass = new CharacterClassModel();

    List<CoreStatModel> AttributeStats = new List<CoreStatModel>();

    protected async override Task OnParametersSetAsync()
    {
        CoreCharacterClassModel classModel = await classData.GetCharacterClassByID(classId);

        SelectedClass = ModelConverter.CovertFromDBModel(classModel);
        AttributeStats = cachedList.CachedAttributes;
    }
    public async Task EditExistingCharacter()
    {
        CoreCharacterClassModel dbModel = ModelConverter.CovertToDBModel(SelectedClass);
        int id = await classData.UpdateCharacterClass(dbModel);
        NavigateToFetchData();
    }
    public void NavigateToFetchData()
    {
        UriHelper.NavigateTo("/CharacterClass/FetchData");
    }
}

@*https://codewithmukesh.com/blog/blazor-crud-with-entity-framework-core/*@