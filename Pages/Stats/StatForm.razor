
<h3>Form</h3>
<EditForm Model="@SelectedStat" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary Model="@SelectedStat" />


    <div class="form-group">
        <label class="control-label">Stat Name</label>
        <InputText @bind-Value="SelectedStat.StatName" class="form-control" />
        <ValidationMessage For="@(() => SelectedStat.StatName)" class="text-danger" />
    </div>
    <div class="form-group">
        <label class="control-label">Beginning Value</label>
        <InputNumber @bind-Value="SelectedStat.BeginningValue" class="form-control" />
        <ValidationMessage For="@(() => SelectedStat.BeginningValue)" class="text-danger" />
    </div>
    <div class="form-group">
    <label class="control-label">Stat Group</label>
    <InputNumber @bind-Value="SelectedStat.StatGroup" class="form-control" />
    <ValidationMessage For="@(() => SelectedStat.StatGroup)" class="text-danger" />
</div>
    

    <button type="submit" class="btn btn-success">
        @ButtonText
    </button>


</EditForm>
@code {
    [Parameter] public StatModel SelectedStat { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

}


@*https://codewithmukesh.com/blog/blazor-crud-with-entity-framework-core/*@


@*https://www.syncfusion.com/blogs/post/how-to-create-a-dynamic-form-builder-in-blazor.aspx*@