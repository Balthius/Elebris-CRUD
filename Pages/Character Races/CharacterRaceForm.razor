
<h3>Form</h3>
<EditForm Model="@SelectedRace" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary Model="@SelectedRace" />


    <div class="form-group">
        <label class="control-label">Race Name</label>
        <InputText @bind-Value="SelectedRace.Name" class="form-control" />
        <ValidationMessage For="@(() => SelectedRace.Name)" class="text-danger" />

    </div>
    <div class="form-group">
        <label class="control-label">Description</label>
        <InputTextArea @bind-Value="SelectedRace.Description" class="form-control" />
        <ValidationMessage For="@(() => SelectedRace.Description)" class="text-danger" />

    </div>

    <AuthorizeView Roles="admin, superuser" Context="authContext">
        <Authorized>
            <button type="submit" class="btn btn-success">
                @ButtonText
            </button>
        </Authorized>
    </AuthorizeView>
</EditForm>
@code {
    [Parameter] public CharacterRaceModel SelectedRace { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

}


@*https://codewithmukesh.com/blog/blazor-crud-with-entity-framework-core/*@


@*https://www.syncfusion.com/blogs/post/how-to-create-a-dynamic-form-builder-in-blazor.aspx*@