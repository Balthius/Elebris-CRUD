@page "/ElebrisClass/FetchData"

@inject IElebrisClassData classData
@inject ICachedLists cachedList
@inject IJSRuntime js
<h3>Available Classes</h3>

@if (AttributeStats == null)
{
    <text>Loading Create...</text>
}
else
{
    <small>Add as many classes as you wish.</small>
    <div class="form-group">
        <a class="btn btn-success" href="ElebrisClass/create"><i class="oi oi-plus"></i> Create New</a>
    </div>
}
<br>
@if (characlasses == null)
{
    <text>Loading Classes...</text>
}
else if (characlasses.Count == 0)
{
    <text>No Records Found.</text>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Governing Attribute</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (ElebrisClassModel charaClass in characlasses)
            {
                <tr>
                    <td>@charaClass.Id</td>
                    <td>@charaClass.Name</td>
                    <td>@ReturnAttributeName(charaClass.GoverningAttribute)</td>
                    <td>
                        <a class="btn btn-success" href="/ElebrisClass/Edit/@charaClass.Id">Edit</a>
                        <button class="btn btn-danger" @onclick="@(() => Delete(charaClass.Id))">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code {


    private List<ElebrisClassModel> characlasses { get; set; } = new List<ElebrisClassModel>();

    List<StatModel> AttributeStats = new List<StatModel>();
    protected override async Task OnInitializedAsync()
    {
        characlasses = await classData.GetAllElebrisClassModels();
        
        AttributeStats = cachedList.CachedAttributes;

    }
    async Task Delete(int charaid)
    {
        var characlass = characlasses.First(x => x.Id == charaid);
        if (await js.InvokeAsync<bool>("confirm", $"Do you want to delete {characlass.Name}'s ({characlass.Id}) Record?"))
        {

            await classData.DeleteElebrisClass(charaid);
        }
    }

    private string ReturnAttributeName(int id)
    {
        var stat = AttributeStats.FirstOrDefault(x => x.Id == id);
        return stat.StatName;
    }

}
